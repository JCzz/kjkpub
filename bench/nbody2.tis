var PI = 3.141592653589793;
var SOLAR_MASS = 4 * PI * PI;
var DAYS_PER_YEAR = 365.24;

type Body
{
 function offsetMomentum(px,py,pz)
 {
  this.vx = -px / SOLAR_MASS;
  this.vy = -py / SOLAR_MASS;
  this.vz = -pz / SOLAR_MASS;
  return this;
 }
}

var Jupiter = {
 prototype:Body,
 x:    4.84143144246472090e+00,
 y:    -1.16032004402742839e+00,
 z:    -1.03622044471123109e-01,
 vx:   1.66007664274403694e-03 * DAYS_PER_YEAR,
 vy:   7.69901118419740425e-03 * DAYS_PER_YEAR,
 vz:   -6.90460016972063023e-05 * DAYS_PER_YEAR,
 mass: 9.54791938424326609e-04 * SOLAR_MASS
};

var Saturn = {
 prototype:Body,
 x:    8.34336671824457987e+00,
 y:    4.12479856412430479e+00,
 z:    -4.03523417114321381e-01,
 vx:   -2.76742510726862411e-03 * DAYS_PER_YEAR,
 vy:   4.99852801234917238e-03 * DAYS_PER_YEAR,
 vz:   2.30417297573763929e-05 * DAYS_PER_YEAR,
 mass: 2.85885980666130812e-04 * SOLAR_MASS
};

var Uranus = {
 prototype:Body,
 x:    1.28943695621391310e+01,
 y:    -1.51111514016986312e+01,
 z:    -2.23307578892655734e-01,
 vx:   2.96460137564761618e-03 * DAYS_PER_YEAR,
 vy:   2.37847173959480950e-03 * DAYS_PER_YEAR,
 vz:   -2.96589568540237556e-05 * DAYS_PER_YEAR,
 mass: 4.36624404335156298e-05 * SOLAR_MASS
};

var Neptune = {
 prototype:Body,
 x:    1.53796971148509165e+01,
 y:    -2.59193146099879641e+01,
 z:    1.79258772950371181e-01,
 vx:   2.68067772490389322e-03 * DAYS_PER_YEAR,
 vy:   1.62824170038242295e-03 * DAYS_PER_YEAR,
 vz:   -9.51592254519715870e-05 * DAYS_PER_YEAR,
 mass: 5.15138902046611451e-05 * SOLAR_MASS
};

var Sun = {
 prototype:Body,
 x:    0.0,
 y:    0.0,
 z:    0.0,
 vx:   0.0,
 vy:   0.0,
 vz:   0.0,
 mass: SOLAR_MASS
};

type NBodySystem
{
 function this(bodies)
 {
  var px = 0.0;
  var py = 0.0;
  var pz = 0.0;
  var size = bodies.length;
  for (var i=0; i<size; i++){
     var b = bodies[i];
     var m = b.mass;
     px += b.vx * m;
     py += b.vy * m;
     pz += b.vz * m;
  }
  bodies[0].offsetMomentum(px,py,pz);
  this.bodies = bodies;
 }

 function energy()
 {
    var dx, dy, dz, distance;
    var e = 0.0;
    var bodies = this.bodies;
    var size = bodies.length;

    var sqrt = Math.sqrt;
    for (var i=0; i<size; ++i)
    {
       var bodyi = bodies[i];

       e += 0.5 * bodyi.mass *
          ( bodyi.vx * bodyi.vx
          + bodyi.vy * bodyi.vy
          + bodyi.vz * bodyi.vz );

       for (var j=i+1; j<size; j++)
       {
          var bodyj = bodies[j];
          dx = bodyi.x - bodyj.x;
          dy = bodyi.y - bodyj.y;
          dz = bodyi.z - bodyj.z;

          distance = sqrt(dx*dx + dy*dy + dz*dz);
          e -= (bodyi.mass * bodyj.mass) / distance;
       }
    }
    return e;
 }

 function advance(dt)
 {
    var dx, dy, dz, distance, mag;
    var bodies = this.bodies;
    var size = bodies.length;
    var sqrt = Math.sqrt;

    for (var i=0; i<size; ++i) {
       var bodyi = bodies[i];
       var bodyi_x = bodyi.x, bodyi_y = bodyi.y, bodyi_z = bodyi.z;
       var bodyi_mass = bodyi.mass;
       for (var j=i+1; j<size; ++j)
       {
          var bodyj = bodies[j];
          var bodyj_mass = bodyj.mass;

          dx = bodyi_x - bodyj.x;
          dy = bodyi_y - bodyj.y;
          dz = bodyi_z - bodyj.z;

          distance = sqrt(dx*dx + dy*dy + dz*dz);
          mag = dt / (distance * distance * distance);

          var dx_mag = dx * mag;
          var dy_mag = dy * mag;
          var dz_mag = dz * mag;

          bodyi.vx -= dx_mag * bodyj_mass;
          bodyi.vy -= dy_mag * bodyj_mass;
          bodyi.vz -= dz_mag * bodyj_mass;

          bodyj.vx += dx_mag * bodyi_mass;
          bodyj.vy += dy_mag * bodyi_mass;
          bodyj.vz += dz_mag * bodyi_mass;
       }
    }

    for (var i=0; i<size; i++) {
       var body = bodies[i];
       body.x += dt * body.vx;
       body.y += dt * body.vy;
       body.z += dt * body.vz;
    }
 }
}

function main()
{
 var n = 200000;
 var bodies = new NBodySystem
 (
   [ Sun,Jupiter,Saturn,Uranus,Neptune ]
 );

 stdout.println(bodies.energy());

 for (var i=0; i<n; i++)
 {
   bodies.advance(0.01);
 }

 stdout.println(bodies.energy());
}

main();
